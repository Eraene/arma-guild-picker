{"version":3,"sources":["components/NavBar.jsx","components/Layout.jsx","components/SkillCompareTable.jsx","components/PerkCompareTable.jsx","components/LanguageCompareTable.jsx","components/GuildPicker.jsx","components/GuildCompare.jsx","components/SkillPicker.jsx","theme.js","App.jsx","serviceWorker.js","index.js"],"names":["withRouter","withStyles","theme","appBar","Object","objectSpread","appTitle","defineProperty","paddingRight","breakpoints","down","fontSize","link","textDecoration","color","opacity","&>button","fontWeight","margin","padding","activeLink","_ref","classes","react_default","a","createElement","Fragment","AppBar_default","position","Toolbar_default","className","Typography_default","variant","react_router_dom","to","activeClassName","exact","Button_default","layout","backgroundColor","palette","background","default","overflow","contentWrapper","maxWidth","children","Grid_default","container","item","xs","components_NavBar","SkillCompareTable","skillKey","_i","_Object$keys","keys","data","skills","length","group","foundSkill","find","k","label","_this","this","guildGroup","gSelected","proficiency","_ref$result","result","_ref$extended","extended","_ref$gNumber","gNumber","proficiencyKey","concat","forEach","sk","_objectSpread2","_this$findGroupAndLab","findGroupAndLabel","branching","_this$props","props","g1Key","g2Key","g1Value","g2Value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","proficiencies","Symbol","iterator","next","done","value","i","_i2","_arr","skillsToObj","err","return","_this$props2","g1Label","g2Label","mungedSkills","mungeSkills","Paper_default","square","root","Table_default","table","TableHead_default","TableRow_default","TableCell_default","cell","TableBody_default","skillGroups","map","skillGroup","key","titleCell","values","row","id","style","Tooltip_default","disableFocusListener","disableTouchListener","title","aria-label","Chip_default","chip","Component","_cell","_chip","width","textTransform","marginLeft","height","marginTop","paddingLeft","content","PerkCompareTable","perks","prk","perksToObj","mungedPerks","mungePerks","noContent","component","scope","textAlign","LanguageCompareTable","languages","lng","languagesToObj","mungedLanguages","mungeLanguages","GuildPicker","state","guild","subguild","toggleSelection","event","setState","target","name","_this$state","newQuery","queryString","stringify","history","_this$props$location","location","_this$props$location$","pathname","push","search","_queryString$parse","parse","guilds","subguilds","_this$state2","tableConfig","justify","spacing","sm","FormHelperText_default","FormControl_default","formControl","Select_default","onChange","inputProps","gKey","MenuItem_default","karma","select","lg","components_SkillCompareTable","components_PerkCompareTable","components_LanguageCompareTable","flexGrow","marginRight","GuildCompare","guild1","guild2","withTheme","type","primary","main","contrastText","secondary","primary1Color","primary2Color","accent1Color","accent2Color","accent3Color","tabs","textColor","tableRow","selectedColor","hoverColor","toggle","thumbOffColor","labelDisabledColor","thumbDisabledColor","createMuiTheme","themeOverrides","App","core_styles","components_Layout","react_router","path","SkillPicker","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0938c33.chunk.js","sourcesContent":["import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst styles = (theme) => ({\r\n  appBar: {\r\n    ...theme.appBar\r\n  },\r\n  appTitle: {\r\n    paddingRight: 32,\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: 12,\r\n      paddingRight: 12,\r\n    }\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n    opacity: 0.69,\r\n    '&>button': {\r\n      fontWeight: 600,\r\n      margin: '0 4px',\r\n      padding: '4px',\r\n      [theme.breakpoints.down('xs')]: {\r\n        fontSize: 10,\r\n      }\r\n    },\r\n  },\r\n  activeLink: {\r\n    opacity: 1,\r\n  },\r\n});\r\n\r\nconst NavBar = ({\r\n  classes,\r\n}) => {\r\n  return(\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.appBar}>\r\n          <Typography className={classes.appTitle} variant=\"title\" color=\"inherit\">\r\n            Armageddon MUD Skills & Guilds\r\n          </Typography>\r\n          <NavLink to=\"/arma-guild-picker/\" className={classes.link} activeClassName={classes.activeLink} exact>\r\n            <Button color=\"inherit\">\r\n              Guild Picker\r\n            </Button>\r\n          </NavLink>\r\n          <NavLink to=\"/arma-guild-picker/guild-compare/\" className={classes.link} activeClassName={classes.activeLink} exact>\r\n            <Button color=\"inherit\">\r\n              Guild Compare\r\n            </Button>\r\n          </NavLink>\r\n          <NavLink to=\"/arma-guild-picker/skill-picker/\" className={classes.link} activeClassName={classes.activeLink} exact>\r\n            <Button color=\"inherit\">\r\n              Skill Picker\r\n            </Button>\r\n          </NavLink>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  )\r\n}\r\nexport default withRouter(withStyles(styles)(NavBar));\r\n","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport NavBar from './NavBar'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    backgroundColor: theme.palette.background.default,\r\n    overflow: 'hidden'\r\n  },\r\n  contentWrapper: {\r\n    [theme.breakpoints.down('xl')]: {\r\n      maxWidth: 1300,\r\n      margin: '0 auto'\r\n    }\r\n  }\r\n});\r\nconst Layout = ({\r\n  theme,\r\n  children,\r\n  classes,\r\n}) => {\r\n  return(\r\n    <Grid container className={classes.layout}>\r\n      <Grid item xs={12}>\r\n        <NavBar />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <div className={classes.contentWrapper}>\r\n          {children}\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\nexport default withStyles(styles)(Layout);\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport data from '../data/data.json'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = (theme) => ({\r\n  cell: {\r\n    width: '25%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 4,\r\n      fontSize: '0.65rem',\r\n      maxWidth: 65,\r\n      paddingRight: '4px !important'\r\n    },\r\n    padding: 8,\r\n  },\r\n  titleCell: {\r\n    textTransform: 'capitalize',\r\n    padding: 8,\r\n    backgroundColor: '#aaaaaa21',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 4,\r\n      fontSize: '0.65rem',\r\n      maxWidth: 65,\r\n      paddingRight: '4px !important'\r\n    },\r\n  },\r\n  chip: {\r\n    backgroundColor: 'rgb(48, 48, 48)',\r\n    fontSize: 8,\r\n    marginLeft: 8,\r\n    padding: 2,\r\n    height: 16,\r\n    marginTop: -1,\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginLeft: 3,\r\n      fontSize: 7,\r\n      height: 13,\r\n    },\r\n    '&> span': {\r\n      paddingLeft: 4,\r\n      paddingRight: 4,\r\n      [theme.breakpoints.down('xs')]: {\r\n        paddingLeft: 2,\r\n        paddingRight: 2\r\n      }\r\n    },\r\n    '&> span::after': {\r\n      content: '\"BRANCH\"',\r\n      [theme.breakpoints.down('xs')]: {\r\n          content: '\"B\"',\r\n      }\r\n    }\r\n  }\r\n});\r\nclass SkillCompareTable extends Component {\r\n\r\n  findGroupAndLabel(skillKey) {\r\n    for (let group of Object.keys(data.skills)) {\r\n      const foundSkill = Object.keys(data.skills[group]).find((k) => k === skillKey)\r\n      if (foundSkill) {\r\n        return {\r\n          group,\r\n          label: data.skills[group][foundSkill],\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  skillsToObj({\r\n    guildGroup,\r\n    gSelected,\r\n    proficiency,\r\n    result = {},\r\n    extended = false,\r\n    gNumber = 1,\r\n  }) {\r\n    const proficiencyKey = `${extended ? 'ex': ''}${proficiency}`;\r\n    if (data[guildGroup] && data[guildGroup][gSelected][proficiencyKey]) {\r\n      data[guildGroup][gSelected][proficiencyKey].forEach(sk => {\r\n        const {\r\n          group,\r\n          label,\r\n        } = this.findGroupAndLabel(sk);\r\n        result[group] = result[group] || {};\r\n        result[group][sk] = {\r\n          [`g${gNumber}Skill`]: label,\r\n          [`g${gNumber}SkillLevel`]: proficiency,\r\n          [`g${gNumber}SkillBranchesFrom`]: extended && data.skills[group][data[guildGroup][gSelected].branching[sk]],\r\n          group,\r\n          ...result[group][sk],\r\n        }\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n\r\n  mungeSkills() {\r\n    const {\r\n      g1Key,\r\n      g2Key,\r\n      g1Value,\r\n      g2Value,\r\n    } = this.props;\r\n\r\n    let result = {};\r\n    for (let proficiency of data.proficiencies) {\r\n      for (var i = 0; i < 2; i++) {\r\n        const guildGroup = `${i === 0 ? g1Key : g2Key}s`\r\n        const gSelected = i === 0 ? g1Value : g2Value;\r\n        const gNumber = i + 1;\r\n        for (let extended of [true, false]) {\r\n          result = this.skillsToObj({result, guildGroup, gSelected, proficiency, extended, gNumber})\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      g1Label,\r\n      g2Label,\r\n      g1Key,\r\n      g2Key,\r\n      classes,\r\n    } = this.props;\r\n    const mungedSkills = this.mungeSkills();\r\n    return (\r\n      <Paper square className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.cell}>\r\n                {g1Label} Skills\r\n              </TableCell>\r\n              <TableCell className={classes.cell}/>\r\n              <TableCell className={classes.cell}>\r\n                {g2Label} Skills\r\n              </TableCell>\r\n              <TableCell className={classes.cell}/>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.skillGroups.map(skillGroup => (\r\n              <>\r\n                <TableRow key={skillGroup}>\r\n                  <TableCell className={classes.titleCell}>\r\n                    {skillGroup}\r\n                  </TableCell>\r\n                  <TableCell className={classes.titleCell} />\r\n                  <TableCell className={classes.titleCell} />\r\n                  <TableCell className={classes.titleCell} />\r\n                </TableRow>\r\n                {mungedSkills[skillGroup] && Object.values(mungedSkills[skillGroup]).map(row => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell\r\n                      className={classes.cell}\r\n                      style={{\r\n                        backgroundColor: row['g1SkillBranchesFrom'] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                      }}\r\n                    >\r\n                    {\r\n                      row['g1SkillBranchesFrom'] && row['g1Skill']\r\n                      ? (\r\n                        <Tooltip\r\n                          disableFocusListener disableTouchListener \r\n                          title={`branches from ${row['g1SkillBranchesFrom']}`}\r\n                          aria-label={`branches from ${row['g1SkillBranchesFrom']}`}\r\n                        >\r\n                          <div>\r\n                            {row['g1Skill']}\r\n                          </div>\r\n                        </Tooltip>\r\n                      ) : row['g1Skill']\r\n                    }\r\n                    </TableCell>\r\n                    <TableCell\r\n                      className={classes.cell}\r\n                      style={{\r\n                        backgroundColor: row['g1SkillBranchesFrom'] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                      }}\r\n                    >\r\n                    {\r\n                      row['g1SkillBranchesFrom']\r\n                      ? (\r\n                        <Tooltip\r\n                          disableFocusListener disableTouchListener \r\n                          title={`branches from ${row['g1SkillBranchesFrom']}`}\r\n                          aria-label={`branches from ${row['g1SkillBranchesFrom']}`}\r\n                        >\r\n                          <div>\r\n                            {row['g1SkillLevel']}\r\n                            {row['g1SkillBranchesFrom'] && <Chip className={classes.chip} />}\r\n                          </div>\r\n                        </Tooltip>\r\n                      ) : row['g1SkillLevel']\r\n                    }\r\n                    </TableCell>\r\n                    <TableCell\r\n                      className={classes.cell}\r\n                      style={{\r\n                        backgroundColor: row['g2SkillBranchesFrom'] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                      }}\r\n                    >\r\n                    {\r\n                      row['g2SkillBranchesFrom'] && row['g2Skill']\r\n                      ? (\r\n                        <Tooltip\r\n                          disableFocusListener disableTouchListener \r\n                          title={`branches from ${row['g2SkillBranchesFrom']}`}\r\n                          aria-label={`branches from ${row['g2SkillBranchesFrom']}`}\r\n                        >\r\n                          <div>\r\n                            {row['g2Skill']}\r\n                          </div>\r\n                        </Tooltip>\r\n                      ) : row['g2Skill']\r\n                    }\r\n                    </TableCell>\r\n                    <TableCell\r\n                      className={classes.cell}\r\n                      style={{\r\n                        backgroundColor: row['g2SkillBranchesFrom'] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                      }}\r\n                    >\r\n                    {\r\n                      row['g2SkillBranchesFrom']\r\n                      ? (\r\n                        <Tooltip\r\n                          disableFocusListener disableTouchListener \r\n                          title={`branches from ${row['g2SkillBranchesFrom']}`}\r\n                          aria-label={`branches from ${row['g2SkillBranchesFrom']}`}\r\n                        >\r\n                          <div>\r\n                            {row['g2SkillLevel']}\r\n                            {row['g2SkillBranchesFrom'] && <Chip className={classes.chip} />}\r\n                          </div>\r\n                        </Tooltip>\r\n                      ) : row['g2SkillLevel']\r\n                    }\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(SkillCompareTable);\r\n\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport data from '../data/data.json'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n  cell: {\r\n    width: '50%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 4,\r\n      fontSize: '0.65rem',\r\n      maxWidth: 65,\r\n      paddingRight: '4px !important'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: 8,\r\n    },\r\n  },\r\n  noContent: {\r\n    padding: '1rem',\r\n    textAlign: 'center',\r\n    width: '100%'\r\n  }\r\n});\r\nclass PerkCompareTable extends Component {\r\n  perksToObj({\r\n    guildGroup,\r\n    gSelected,\r\n    gNumber = 1,\r\n    result = {},\r\n  }) {\r\n    if (data[guildGroup] && data[guildGroup][gSelected].perks) {\r\n      data[guildGroup][gSelected].perks.forEach(prk => {\r\n        result[prk] = {\r\n          [`g${gNumber}Perk`]: data.perks[prk],\r\n          ...result[prk],\r\n        }\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n\r\n  mungePerks() {\r\n    const {\r\n      g1Key,\r\n      g2Key,\r\n      g1Value,\r\n      g2Value,\r\n    } = this.props;\r\n\r\n    let result = {};\r\n    for (var i = 0; i < 2; i++) {\r\n      const guildGroup = `${i === 0 ? g1Key : g2Key}s`\r\n      const gSelected = i === 0 ? g1Value : g2Value;\r\n      const gNumber = i + 1;\r\n      result = this.perksToObj({result, guildGroup, gSelected, gNumber})\r\n    }\r\n    return Object.values(result);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      g1Label,\r\n      g2Label,\r\n      g1Key,\r\n      g2Key,\r\n      classes,\r\n    } = this.props;\r\n\r\n    const mungedPerks = this.mungePerks();\r\n    return (\r\n      <Paper square className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.cell}>\r\n                {g1Label} Perks\r\n              </TableCell>\r\n              <TableCell className={classes.cell}>\r\n                {g2Label} Perks\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {(!mungedPerks || mungedPerks.length === 0) && (\r\n              <TableRow key=\"noPerks\">\r\n                <Typography className={classes.noContent}>Neither group has perks</Typography>\r\n              </TableRow>\r\n            )}\r\n            {mungedPerks && mungedPerks.length > 0  && mungedPerks.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell className={classes.cell} component=\"th\" scope=\"row\">\r\n                  {row['g1Perk']}\r\n                </TableCell>\r\n                <TableCell className={classes.cell}>{row['g2Perk']}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(PerkCompareTable);\r\n\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport data from '../data/data.json'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n  cell: {\r\n    width: '50%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 4,\r\n      fontSize: '0.65rem',\r\n      maxWidth: 65,\r\n      paddingRight: '4px !important'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: 8,\r\n    },\r\n  },\r\n  noContent: {\r\n    padding: '1rem',\r\n    textAlign: 'center',\r\n    width: '100%'\r\n  }\r\n});\r\nclass LanguageCompareTable extends Component {\r\n  languagesToObj({\r\n    guildGroup,\r\n    gSelected,\r\n    gNumber = 1,\r\n    result = {},\r\n  }) {\r\n    if (data[guildGroup] && data[guildGroup][gSelected].languages) {\r\n      data[guildGroup][gSelected].languages.forEach(lng => {\r\n        result[lng] = {\r\n          [`g${gNumber}Language`]: data.skills.languages[lng],\r\n          ...result[lng],\r\n        }\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n\r\n  mungeLanguages() {\r\n    const {\r\n      g1Key,\r\n      g2Key,\r\n      g1Value,\r\n      g2Value,\r\n    } = this.props;\r\n\r\n    let result = {};\r\n      for (var i = 0; i < 2; i++) {\r\n        const guildGroup = `${i === 0 ? g1Key : g2Key}s`\r\n        const gSelected = i === 0 ? g1Value : g2Value;\r\n        const gNumber = i + 1;\r\n        result = this.languagesToObj({result, guildGroup, gSelected, gNumber})\r\n    }\r\n    return Object.values(result);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      g1Label,\r\n      g2Label,\r\n      g1Key,\r\n      g2Key,\r\n      classes,\r\n    } = this.props;\r\n\r\n    const mungedLanguages = this.mungeLanguages();\r\n    return (\r\n      <Paper square className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.cell}>\r\n                {g1Label} Languages\r\n              </TableCell>\r\n              <TableCell className={classes.cell}>\r\n                {g2Label} Languages\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {(!mungedLanguages || mungedLanguages.length === 0) && (\r\n              <TableRow key=\"noLanguages\">\r\n                <Typography className={classes.noContent}>Neither group has bonus languages</Typography>\r\n              </TableRow>\r\n            )}\r\n            {mungedLanguages && mungedLanguages.length > 0  && mungedLanguages.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell className={classes.cell} component=\"th\" scope=\"row\">\r\n                  {row['g1Language']}\r\n                </TableCell>\r\n                <TableCell className={classes.cell}>{row['g2Language']}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(LanguageCompareTable);\r\n\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport queryString from 'query-string';\r\nimport data from '../data/data.json'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SkillCompareTable from './SkillCompareTable';\r\nimport PerkCompareTable from './PerkCompareTable';\r\nimport LanguageCompareTable from './LanguageCompareTable';\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n    flexGrow: 1,\r\n  },\r\n  formControl: {\r\n    width: 'calc(100% - 1rem)',\r\n    marginRight: '1rem',\r\n  }\r\n});\r\nclass GuildPicker extends Component {\r\n  state = {\r\n    guild: 'enforcer',\r\n    subguild: 'hunter',\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      location\r\n    } = this.props;\r\n    const {\r\n      guild,\r\n      subguild\r\n    } = queryString.parse(location.search);\r\n\r\n    if (data.guilds[guild]) {\r\n      this.setState({ guild });\r\n    }\r\n    if (data.subguilds[subguild]) {\r\n      this.setState({ subguild });\r\n    }\r\n  }\r\n\r\n  toggleSelection = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    const {\r\n      guild,\r\n      subguild\r\n    } = this.state;\r\n    const newQuery = queryString.stringify({\r\n      ...{\r\n        guild,\r\n        subguild,\r\n      },\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    const {\r\n      history,\r\n      location: {\r\n        pathname = '/'\r\n      } = {}\r\n    } = this.props;\r\n    history.push({\r\n      pathname,\r\n      search: newQuery,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes\r\n    } = this.props;\r\n    const {\r\n      guild,\r\n      subguild,\r\n    } = this.state;\r\n    const tableConfig = {\r\n      g1Label: \"Guild\",\r\n      g2Label: \"Subguild\",\r\n      g1Key: \"guild\",\r\n      g2Key: \"subguild\",\r\n      g1Value: guild,\r\n      g2Value: subguild,\r\n    };\r\n    return (\r\n      <>\r\n        <Grid container justify=\"center\" spacing={16} className={classes.container}>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormHelperText>Guild</FormHelperText>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                value={this.state.guild}\r\n                onChange={this.toggleSelection}\r\n                inputProps={{\r\n                  name: 'guild',\r\n                  id: 'guild-select',\r\n                }}\r\n              >\r\n                {Object.keys(data.guilds).map(gKey => (\r\n                  <MenuItem value={gKey}>\r\n                    {data.guilds[gKey].label}\r\n                    {data.guilds[gKey].karma ? ` (${data.guilds[gKey].karma})` : ''}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormHelperText>Subguild</FormHelperText>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                className={classes.select}\r\n                value={this.state.subguild}\r\n                onChange={this.toggleSelection}\r\n                inputProps={{\r\n                  name: 'subguild',\r\n                  id: 'subguild-select',\r\n                }}\r\n              >\r\n                {Object.keys(data.subguilds).map(gKey => (\r\n                  <MenuItem value={gKey}>\r\n                    {data.subguilds[gKey].label}\r\n                    {data.subguilds[gKey].karma ? ` (${data.subguilds[gKey].karma})` : ''}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container justify=\"center\" spacing={16} className={classes.container}>\r\n          <Grid item xs={12} lg={6}>\r\n            <SkillCompareTable\r\n              {...tableConfig}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} lg={6}>\r\n            <Grid container spacing={16} className={classes.container}>\r\n              <Grid item xs={12}>\r\n                <PerkCompareTable\r\n                  {...tableConfig}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <LanguageCompareTable\r\n                  {...tableConfig}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(GuildPicker);\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport queryString from 'query-string';\r\nimport data from '../data/data.json'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SkillCompareTable from './SkillCompareTable';\r\nimport PerkCompareTable from './PerkCompareTable';\r\nimport LanguageCompareTable from './LanguageCompareTable';\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n    flexGrow: 1,\r\n  },\r\n  formControl: {\r\n    width: 'calc(100% - 1rem)',\r\n    marginRight: '1rem',\r\n  }\r\n});\r\nclass GuildCompare extends Component {\r\n  state = {\r\n    guild1: 'enforcer',\r\n    guild2: 'infiltrator',\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      location\r\n    } = this.props;\r\n    const {\r\n      guild1,\r\n      guild2\r\n    } = queryString.parse(location.search);\r\n\r\n    if (data.guilds[guild1]) {\r\n      this.setState({ guild1 });\r\n    }\r\n    if (data.guilds[guild2]) {\r\n      this.setState({ guild2 });\r\n    }\r\n  }\r\n\r\n  toggleSelection = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    const {\r\n      guild1,\r\n      guild2\r\n    } = this.state;\r\n    const newQuery = queryString.stringify({\r\n      ...{\r\n        guild1,\r\n        guild2,\r\n      },\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    const {\r\n      history,\r\n      location: {\r\n        pathname = '/'\r\n      } = {}\r\n    } = this.props;\r\n    history.push({\r\n      pathname,\r\n      search: newQuery,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes\r\n    } = this.props;\r\n    const {\r\n      guild1,\r\n      guild2,\r\n    } = this.state;\r\n    const tableConfig = {\r\n      g1Label: \"Guild 1\",\r\n      g2Label: \"Guild 2\",\r\n      g1Key: \"guild\",\r\n      g2Key: \"guild\",\r\n      g1Value: guild1,\r\n      g2Value: guild2,\r\n    };\r\n    return (\r\n      <>\r\n        <Grid container justify=\"center\" spacing={16} className={classes.container}>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormHelperText>Guild 1</FormHelperText>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                value={this.state.guild1}\r\n                onChange={this.toggleSelection}\r\n                inputProps={{\r\n                  name: 'guild1',\r\n                  id: 'guild1-select',\r\n                }}\r\n              >\r\n                {Object.keys(data.guilds).map(gKey => (\r\n                  <MenuItem value={gKey}>\r\n                    {data.guilds[gKey].label}\r\n                    {data.guilds[gKey].karma ? ` (${data.guilds[gKey].karma})` : ''}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormHelperText>Guild 2</FormHelperText>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                className={classes.select}\r\n                value={this.state.guild2}\r\n                onChange={this.toggleSelection}\r\n                inputProps={{\r\n                  name: 'guild2',\r\n                  id: 'guild2-select',\r\n                }}\r\n              >\r\n                {Object.keys(data.guilds).map(gKey => (\r\n                  <MenuItem value={gKey}>\r\n                    {data.guilds[gKey].label}\r\n                    {data.guilds[gKey].karma ? ` (${data.guilds[gKey].karma})` : ''}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container justify=\"center\" spacing={16} className={classes.container}>\r\n          <Grid item xs={12} lg={6}>\r\n            <SkillCompareTable\r\n              {...tableConfig}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} lg={6}>\r\n            <Grid container spacing={16} className={classes.container}>\r\n              <Grid item xs={12}>\r\n                <PerkCompareTable\r\n                  {...tableConfig}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <LanguageCompareTable\r\n                  {...tableConfig}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(GuildCompare);\r\n","import React from 'react'\r\nimport { withTheme } from '@material-ui/core/styles';\r\n\r\nconst SkillPicker = () => 'Skill Picker'\r\nexport default withTheme()(SkillPicker);\r\n","const theme = {\r\n  \"palette\": {\r\n    \"type\": \"dark\",\r\n    \"primary\": {\r\n      \"main\": \"#d84315\",\r\n      \"contrastText\": \"rgba(0, 0, 0, 0.87)\"\r\n    },\r\n    \"secondary\": {\r\n      \"main\": \"#5d4037\"\r\n    },\r\n    \"primary1Color\": \"#d84315\",\r\n    \"primary2Color\": \"#5d4037\",\r\n    \"accent1Color\": \"#eeeeee\",\r\n    \"accent2Color\": \"rgba(255, 236, 179, 0.3)\",\r\n    \"accent3Color\": \"#ff8f00\"\r\n  },\r\n  \"tabs\": {\r\n    \"backgroundColor\": \"#e64a19\",\r\n    \"textColor\": \"rgba(33, 33, 33, 0.54)\"\r\n  },\r\n  \"tableRow\": {\r\n    \"selectedColor\": \"rgba(255, 255, 255, 0.1)\",\r\n    \"hoverColor\": \"rgba(255, 236, 179, 0.15)\"\r\n  },\r\n  \"toggle\": {\r\n    \"thumbOffColor\": \"rgba(255, 236, 179, 0.51)\",\r\n    \"labelDisabledColor\": \"rgba(255, 255, 255, 0.29)\",\r\n    \"thumbDisabledColor\": \"rgba(255, 255, 255, 0.48)\"\r\n  }\r\n};\r\nexport default theme;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Layout from './components/Layout'\r\nimport GuildPicker from './components/GuildPicker'\r\nimport GuildCompare from './components/GuildCompare'\r\nimport SkillPicker from './components/SkillPicker'\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport themeOverrides from './theme.js';\r\nconst theme = createMuiTheme(themeOverrides);\r\n\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Router>\r\n        <Layout>\r\n          <Route path=\"/arma-guild-picker/\" exact component={GuildPicker} />\r\n          <Route path=\"/arma-guild-picker/guild-picker/\" component={GuildPicker} />\r\n          <Route path=\"/arma-guild-picker/guild-compare/\" component={GuildCompare} />\r\n          <Route path=\"/arma-guild-picker/skill-picker/\" component={SkillPicker} />\r\n        </Layout>\r\n      </Router>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}