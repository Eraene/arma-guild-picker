{"version":3,"sources":["components/NavBar.jsx","components/Layout.jsx","components/SkillCompareTable.jsx","components/PerkCompareTable.jsx","components/LanguageCompareTable.jsx","components/GuildPicker.jsx","components/GuildCompare.jsx","components/SkillPicker.jsx","theme.js","App.jsx","serviceWorker.js","index.js"],"names":["withRouter","withStyles","theme","appBar","Object","objectSpread","appTitle","defineProperty","paddingRight","breakpoints","down","fontSize","link","textDecoration","color","opacity","&>button","fontWeight","margin","padding","activeLink","_ref","classes","react_default","a","createElement","Fragment","AppBar_default","position","Toolbar_default","className","Typography_default","variant","react_router_dom","to","activeClassName","exact","Button_default","withTheme","children","styles","layout","backgroundColor","palette","background","default","Grid_default","container","style","item","xs","components_NavBar","SkillCompareTable","skillKey","_i","_Object$keys","keys","data","skills","length","group","foundSkill","find","k","label","_this","this","guildGroup","gSelected","proficiency","_ref$result","result","_ref$extended","extended","proficiencyKey","concat","forEach","sk","_objectSpread2","_this$findGroupAndLab","findGroupAndLabel","branching","_this$props","props","g1Key","g2Key","g1Value","g2Value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","proficiencies","Symbol","iterator","next","done","value","_i2","_arr","_i3","_arr2","skillsToObj","err","return","values","_this$props2","g1Label","g2Label","console","log","mungeSkills","Paper_default","square","root","Table_default","table","TableHead_default","TableRow_default","TableCell_default","cell","TableBody_default","map","row","key","id","Tooltip_default","title","aria-label","Chip_default","chip","Component","_cell","width","maxWidth","marginLeft","height","marginTop","&> span","paddingLeft","&> span::after","content","PerkCompareTable","perks","prk","perksToObj","mungedPerks","mungePerks","noContent","component","scope","textAlign","LanguageCompareTable","languages","lng","languagesToObj","mungedLanguages","mungeLanguages","GuildPicker","state","guild","subguild","toggleSelection","event","setState","target","name","_this$state","tableConfig","justify","spacing","sm","FormHelperText_default","FormControl_default","formControl","Select_default","onChange","inputProps","guilds","gKey","MenuItem_default","karma","select","subguilds","lg","components_SkillCompareTable","components_PerkCompareTable","components_LanguageCompareTable","flexGrow","marginRight","type","primary","main","contrastText","secondary","primary1Color","primary2Color","accent1Color","accent2Color","accent3Color","tabs","textColor","tableRow","selectedColor","hoverColor","toggle","thumbOffColor","labelDisabledColor","thumbDisabledColor","createMuiTheme","themeOverrides","App","core_styles","components_Layout","react_router","path","GuildCompare","SkillPicker","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ec0d5f3.chunk.js","sourcesContent":["import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst styles = (theme) => ({\r\n  appBar: {\r\n    ...theme.appBar\r\n  },\r\n  appTitle: {\r\n    paddingRight: 32,\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: 12,\r\n      paddingRight: 12,\r\n    }\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n    opacity: 0.69,\r\n    '&>button': {\r\n      fontWeight: 600,\r\n      margin: '0 4px',\r\n      padding: '4px',\r\n      [theme.breakpoints.down('xs')]: {\r\n        fontSize: 10,\r\n      }\r\n    },\r\n  },\r\n  activeLink: {\r\n    opacity: 1,\r\n  },\r\n});\r\n\r\nconst NavBar = ({\r\n  classes,\r\n}) => {\r\n  return(\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.appBar}>\r\n          <Typography className={classes.appTitle} variant=\"title\" color=\"inherit\">\r\n            Armageddon MUD Skills & Guilds\r\n          </Typography>\r\n          <NavLink to=\"/arma-guild-picker/\" className={classes.link} activeClassName={classes.activeLink} exact>\r\n            <Button color=\"inherit\">\r\n              Guild Picker\r\n            </Button>\r\n          </NavLink>\r\n          <NavLink to=\"/arma-guild-picker/guild-compare/\" className={classes.link} activeClassName={classes.activeLink} exact>\r\n            <Button color=\"inherit\">\r\n              Guild Compare\r\n            </Button>\r\n          </NavLink>\r\n          <NavLink to=\"/arma-guild-picker/skill-picker/\" className={classes.link} activeClassName={classes.activeLink} exact>\r\n            <Button color=\"inherit\">\r\n              Skill Picker\r\n            </Button>\r\n          </NavLink>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  )\r\n}\r\nexport default withRouter(withStyles(styles)(NavBar));\r\n","import React from 'react'\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport NavBar from './NavBar'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst Layout = ({\r\n  theme,\r\n  children\r\n}) => {\r\n  const styles = {\r\n    layout: {\r\n      backgroundColor: theme.palette.background.default,\r\n    }\r\n  }\r\n  return(\r\n    <Grid container style={styles.layout}>\r\n      <Grid item xs={12}>\r\n        <NavBar />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        {children}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\nexport default withTheme()(Layout);\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport data from '../data/data.json'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = (theme) => ({\r\n  cell: {\r\n    width: '25%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 4,\r\n      fontSize: '0.65rem',\r\n      maxWidth: 65,\r\n    },\r\n    padding: 8,\r\n  },\r\n  chip: {\r\n    backgroundColor: 'rgb(48, 48, 48)',\r\n    fontSize: 8,\r\n    marginLeft: 8,\r\n    padding: 2,\r\n    height: 16,\r\n    marginTop: -1,\r\n    '&> span': {\r\n      paddingLeft: 4,\r\n      paddingRight: 4,\r\n    },\r\n    '&> span::after': {\r\n      content: '\"BRANCH\"',\r\n      [theme.breakpoints.down('xs')]: {\r\n          content: '\"B\"',\r\n      }\r\n    }\r\n  }\r\n});\r\nclass SkillCompareTable extends Component {\r\n\r\n  findGroupAndLabel(skillKey) {\r\n    for (let group of Object.keys(data.skills)) {\r\n      const foundSkill = Object.keys(data.skills[group]).find((k) => k === skillKey)\r\n      if (foundSkill) {\r\n        return {\r\n          group,\r\n          label: data.skills[group][foundSkill],\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  skillsToObj({\r\n    guildGroup,\r\n    gSelected,\r\n    proficiency,\r\n    result = {},\r\n    extended = false\r\n  }) {\r\n    const proficiencyKey = `${extended ? 'ex': ''}${proficiency}`;\r\n    if (data[guildGroup] && data[guildGroup][gSelected][proficiencyKey]) {\r\n      data[guildGroup][gSelected][proficiencyKey].forEach(sk => {\r\n        const {\r\n          group,\r\n          label,\r\n        } = this.findGroupAndLabel(sk);\r\n        result[sk] = {\r\n          [`${guildGroup}Skill`]: label,\r\n          [`${guildGroup}SkillLevel`]: proficiency,\r\n          [`${guildGroup}SkillBranchesFrom`]: extended && data.skills[group][data[guildGroup][gSelected].branching[sk]],\r\n          group,\r\n          ...result[sk],\r\n        }\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n\r\n  mungeSkills() {\r\n    const {\r\n      g1Key,\r\n      g2Key,\r\n      g1Value,\r\n      g2Value,\r\n    } = this.props;\r\n\r\n    let result = {};\r\n    for (let proficiency of data.proficiencies) {\r\n      for (let guildGroup of [`${g1Key}s`, `${g2Key}s`]) {\r\n        const gSelected = guildGroup === `${g1Key}s` ? g1Value : g2Value;\r\n        for (let extended of [true, false]) {\r\n          result = this.skillsToObj({result, guildGroup, gSelected, proficiency, extended})\r\n        }\r\n      }\r\n    }\r\n    return Object.values(result);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      g1Label,\r\n      g2Label,\r\n      g1Key,\r\n      g2Key,\r\n      classes,\r\n    } = this.props;\r\n    console.log(this.mungeSkills())\r\n    return (\r\n      <Paper square className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.cell}>\r\n                {g1Label} Skills\r\n              </TableCell>\r\n              <TableCell className={classes.cell}/>\r\n              <TableCell className={classes.cell}>\r\n                {g2Label} Skills\r\n              </TableCell>\r\n              <TableCell className={classes.cell}/>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.mungeSkills().map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell\r\n                  className={classes.cell}\r\n                  style={{\r\n                    backgroundColor: row[`${g1Key}sSkillBranchesFrom`] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                  }}\r\n                >\r\n                {\r\n                  row[`${g1Key}sSkillBranchesFrom`] && row[`${g1Key}sSkill`]\r\n                  ? (\r\n                    <Tooltip\r\n                      title={`branches from ${row[`${g1Key}sSkillBranchesFrom`]}`}\r\n                      aria-label={`branches from ${row[`${g1Key}sSkillBranchesFrom`]}`}\r\n                    >\r\n                      <div>\r\n                        {row[`${g1Key}sSkill`]}\r\n                      </div>\r\n                    </Tooltip>\r\n                  ) : row[`${g1Key}sSkill`]\r\n                }\r\n                </TableCell>\r\n                <TableCell\r\n                  className={classes.cell}\r\n                  style={{\r\n                    backgroundColor: row[`${g1Key}sSkillBranchesFrom`] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                  }}\r\n                >\r\n                {\r\n                  row[`${g1Key}sSkillBranchesFrom`]\r\n                  ? (\r\n                    <Tooltip\r\n                      title={`branches from ${row[`${g1Key}sSkillBranchesFrom`]}`}\r\n                      aria-label={`branches from ${row[`${g1Key}sSkillBranchesFrom`]}`}\r\n                    >\r\n                      <div>\r\n                        {row[`${g1Key}sSkillLevel`]}\r\n                        {row[`${g1Key}sSkillBranchesFrom`] && <Chip className={classes.chip} />}\r\n                      </div>\r\n                    </Tooltip>\r\n                  ) : row[`${g1Key}sSkillLevel`]\r\n                }\r\n                </TableCell>\r\n                <TableCell\r\n                  className={classes.cell}\r\n                  style={{\r\n                    backgroundColor: row[`${g2Key}sSkillBranchesFrom`] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                  }}\r\n                >\r\n                {\r\n                  row[`${g2Key}sSkillBranchesFrom`] && row[`${g2Key}sSkill`]\r\n                  ? (\r\n                    <Tooltip\r\n                      title={`branches from ${row[`${g2Key}sSkillBranchesFrom`]}`}\r\n                      aria-label={`branches from ${row[`${g2Key}sSkillBranchesFrom`]}`}\r\n                    >\r\n                      <div>\r\n                        {row[`${g2Key}sSkill`]}\r\n                      </div>\r\n                    </Tooltip>\r\n                  ) : row[`${g2Key}sSkill`]\r\n                }\r\n                </TableCell>\r\n                <TableCell\r\n                  className={classes.cell}\r\n                  style={{\r\n                    backgroundColor: row[`${g2Key}sSkillBranchesFrom`] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                  }}\r\n                >\r\n                {\r\n                  row[`${g2Key}sSkillBranchesFrom`]\r\n                  ? (\r\n                    <Tooltip\r\n                      title={`branches from ${row[`${g2Key}sSkillBranchesFrom`]}`}\r\n                      aria-label={`branches from ${row[`${g2Key}sSkillBranchesFrom`]}`}\r\n                    >\r\n                      <div>\r\n                        {row[`${g2Key}sSkillLevel`]}\r\n                        {row[`${g2Key}sSkillBranchesFrom`] && <Chip className={classes.chip} />}\r\n                      </div>\r\n                    </Tooltip>\r\n                  ) : row[`${g2Key}sSkillLevel`]\r\n                }\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(SkillCompareTable);\r\n\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport data from '../data/data.json'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n  cell: {\r\n    width: '50%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 4,\r\n      fontSize: '0.65rem',\r\n      maxWidth: 65,\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: 8,\r\n    },\r\n  },\r\n  noContent: {\r\n    padding: '1rem',\r\n    textAlign: 'center',\r\n    width: '100%'\r\n  }\r\n});\r\nclass PerkCompareTable extends Component {\r\n  perksToObj({\r\n    guildGroup,\r\n    gSelected,\r\n    result = {},\r\n  }) {\r\n    if (data[guildGroup] && data[guildGroup][gSelected].perks) {\r\n      data[guildGroup][gSelected].perks.forEach(prk => {\r\n        result[prk] = {\r\n          [`${guildGroup}Perk`]: data.perks[prk],\r\n          ...result[prk],\r\n        }\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n\r\n  mungePerks() {\r\n    const {\r\n      g1Key,\r\n      g2Key,\r\n      g1Value,\r\n      g2Value,\r\n    } = this.props;\r\n\r\n    let result = {};\r\n    for (let guildGroup of [`${g1Key}s`, `${g2Key}s`]) {\r\n      const gSelected = guildGroup === `${g1Key}s` ? g1Value : g2Value;\r\n      result = this.perksToObj({result, guildGroup, gSelected})\r\n    }\r\n    return Object.values(result);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      g1Label,\r\n      g2Label,\r\n      g1Key,\r\n      g2Key,\r\n      classes,\r\n    } = this.props;\r\n\r\n    const mungedPerks = this.mungePerks();\r\n    return (\r\n      <Paper square className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.cell}>\r\n                {g1Label} Perks\r\n              </TableCell>\r\n              <TableCell className={classes.cell}>\r\n                {g2Label} Perks\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {(!mungedPerks || mungedPerks.length === 0) && (\r\n              <TableRow key=\"noPerks\">\r\n                <Typography className={classes.noContent}>Neither group has perks</Typography>\r\n              </TableRow>\r\n            )}\r\n            {mungedPerks && mungedPerks.length > 0  && mungedPerks.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell className={classes.cell} component=\"th\" scope=\"row\">\r\n                  {row[`${g1Key}sPerk`]}\r\n                </TableCell>\r\n                <TableCell className={classes.cell}>{row[`${g2Key}sPerk`]}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(PerkCompareTable);\r\n\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport data from '../data/data.json'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n  cell: {\r\n    width: '50%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 4,\r\n      fontSize: '0.65rem',\r\n      maxWidth: 65,\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: 8,\r\n    },\r\n  },\r\n  noContent: {\r\n    padding: '1rem',\r\n    textAlign: 'center',\r\n    width: '100%'\r\n  }\r\n});\r\nclass LanguageCompareTable extends Component {\r\n  languagesToObj({\r\n    guildGroup,\r\n    gSelected,\r\n    result = {},\r\n  }) {\r\n    if (data[guildGroup] && data[guildGroup][gSelected].languages) {\r\n      data[guildGroup][gSelected].languages.forEach(lng => {\r\n        result[lng] = {\r\n          [`${guildGroup}Language`]: data.skills.languages[lng],\r\n          ...result[lng],\r\n        }\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n\r\n  mungeLanguages() {\r\n    const {\r\n      g1Key,\r\n      g2Key,\r\n      g1Value,\r\n      g2Value,\r\n    } = this.props;\r\n\r\n    let result = {};\r\n    for (let guildGroup of [`${g1Key}s`, `${g2Key}s`]) {\r\n      const gSelected = guildGroup === `${g1Key}s` ? g1Value : g2Value;\r\n      result = this.languagesToObj({result, guildGroup, gSelected})\r\n    }\r\n    return Object.values(result);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      g1Label,\r\n      g2Label,\r\n      g1Key,\r\n      g2Key,\r\n      classes,\r\n    } = this.props;\r\n\r\n    const mungedLanguages = this.mungeLanguages();\r\n    return (\r\n      <Paper square className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.cell}>\r\n                {g1Label} Languages\r\n              </TableCell>\r\n              <TableCell className={classes.cell}>\r\n                {g2Label} Languages\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {(!mungedLanguages || mungedLanguages.length === 0) && (\r\n              <TableRow key=\"noLanguages\">\r\n                <Typography className={classes.noContent}>Neither group has bonus languages</Typography>\r\n              </TableRow>\r\n            )}\r\n            {mungedLanguages && mungedLanguages.length > 0  && mungedLanguages.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell className={classes.cell} component=\"th\" scope=\"row\">\r\n                  {row[`${g1Key}sLanguage`]}\r\n                </TableCell>\r\n                <TableCell className={classes.cell}>{row[`${g2Key}sLanguage`]}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(LanguageCompareTable);\r\n\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport data from '../data/data.json'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SkillCompareTable from './SkillCompareTable';\r\nimport PerkCompareTable from './PerkCompareTable';\r\nimport LanguageCompareTable from './LanguageCompareTable';\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n    flexGrow: 1,\r\n  },\r\n  formControl: {\r\n    width: 'calc(100% - 1rem)',\r\n    marginRight: '1rem',\r\n  }\r\n});\r\nclass GuildPicker extends Component {\r\n  state = {\r\n    guild: 'enforcer',\r\n    subguild: 'hunter',\r\n  }\r\n\r\n  toggleSelection = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes\r\n    } = this.props;\r\n    const {\r\n      guild,\r\n      subguild,\r\n    } = this.state;\r\n    const tableConfig = {\r\n      g1Label: \"Guild\",\r\n      g2Label: \"Subguild\",\r\n      g1Key: \"guild\",\r\n      g2Key: \"subguild\",\r\n      g1Value: guild,\r\n      g2Value: subguild,\r\n    };\r\n    return (\r\n      <>\r\n        <Grid container justify=\"center\" spacing={16} className={classes.container}>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormHelperText>Guild</FormHelperText>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                value={this.state.guild}\r\n                onChange={this.toggleSelection}\r\n                inputProps={{\r\n                  name: 'guild',\r\n                  id: 'guild-select',\r\n                }}\r\n              >\r\n                {Object.keys(data.guilds).map(gKey => (\r\n                  <MenuItem value={gKey}>\r\n                    {data.guilds[gKey].label}\r\n                    {data.guilds[gKey].karma ? ` (${data.guilds[gKey].karma})` : ''}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormHelperText>Subguild</FormHelperText>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                className={classes.select}\r\n                value={this.state.subguild}\r\n                onChange={this.toggleSelection}\r\n                inputProps={{\r\n                  name: 'subguild',\r\n                  id: 'subguild-select',\r\n                }}\r\n              >\r\n                {Object.keys(data.subguilds).map(gKey => (\r\n                  <MenuItem value={gKey}>\r\n                    {data.subguilds[gKey].label}\r\n                    {data.subguilds[gKey].karma ? ` (${data.subguilds[gKey].karma})` : ''}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container justify=\"center\" spacing={16} className={classes.container}>\r\n          <Grid item xs={12} lg={6}>\r\n            <SkillCompareTable\r\n              {...tableConfig}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} lg={6}>\r\n            <Grid container spacing={16} className={classes.container}>\r\n              <Grid item xs={12}>\r\n                <PerkCompareTable\r\n                  {...tableConfig}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <LanguageCompareTable\r\n                  {...tableConfig}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(GuildPicker);\r\n","import React from 'react'\r\nimport { withTheme } from '@material-ui/core/styles';\r\n\r\nconst GuildCompare = () => 'Guild Compare'\r\nexport default withTheme()(GuildCompare);\r\n","import React from 'react'\r\nimport { withTheme } from '@material-ui/core/styles';\r\n\r\nconst SkillPicker = () => 'Skill Picker'\r\nexport default withTheme()(SkillPicker);\r\n","const theme = {\r\n  \"palette\": {\r\n    \"type\": \"dark\",\r\n    \"primary\": {\r\n      \"main\": \"#d84315\",\r\n      \"contrastText\": \"rgba(0, 0, 0, 0.87)\"\r\n    },\r\n    \"secondary\": {\r\n      \"main\": \"#5d4037\"\r\n    },\r\n    \"primary1Color\": \"#d84315\",\r\n    \"primary2Color\": \"#5d4037\",\r\n    \"accent1Color\": \"#eeeeee\",\r\n    \"accent2Color\": \"rgba(255, 236, 179, 0.3)\",\r\n    \"accent3Color\": \"#ff8f00\"\r\n  },\r\n  \"tabs\": {\r\n    \"backgroundColor\": \"#e64a19\",\r\n    \"textColor\": \"rgba(33, 33, 33, 0.54)\"\r\n  },\r\n  \"tableRow\": {\r\n    \"selectedColor\": \"rgba(255, 255, 255, 0.1)\",\r\n    \"hoverColor\": \"rgba(255, 236, 179, 0.15)\"\r\n  },\r\n  \"toggle\": {\r\n    \"thumbOffColor\": \"rgba(255, 236, 179, 0.51)\",\r\n    \"labelDisabledColor\": \"rgba(255, 255, 255, 0.29)\",\r\n    \"thumbDisabledColor\": \"rgba(255, 255, 255, 0.48)\"\r\n  }\r\n};\r\nexport default theme;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport Layout from './components/Layout'\nimport GuildPicker from './components/GuildPicker'\nimport GuildCompare from './components/GuildCompare'\nimport SkillPicker from './components/SkillPicker'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport themeOverrides from './theme.js';\nconst theme = createMuiTheme(themeOverrides);\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Router>\n        <Layout>\n          <Route path=\"/arma-guild-picker/\" exact component={GuildPicker} />\n          <Route path=\"/arma-guild-picker/guild-picker/\" component={GuildPicker} />\n          <Route path=\"/arma-guild-picker/guild-compare/\" component={GuildCompare} />\n          <Route path=\"/arma-guild-picker/skill-picker/\" component={SkillPicker} />\n        </Layout>\n      </Router>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}