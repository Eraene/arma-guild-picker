{"version":3,"sources":["components/NavBar.jsx","components/Layout.jsx","components/SkillCompareTable.jsx","components/PerkCompareTable.jsx","components/LanguageCompareTable.jsx","components/GuildPicker.jsx","components/GuildCompare.jsx","components/SkillPicker.jsx","theme.js","App.jsx","serviceWorker.js","index.js"],"names":["withRouter","withStyles","theme","appBar","Object","objectSpread","appTitle","defineProperty","paddingRight","breakpoints","down","fontSize","link","textDecoration","color","opacity","&>button","fontWeight","margin","padding","activeLink","_ref","classes","react_default","a","createElement","Fragment","AppBar_default","position","Toolbar_default","className","Typography_default","variant","react_router_dom","to","activeClassName","exact","Button_default","layout","backgroundColor","palette","background","default","overflow","contentWrapper","maxWidth","children","Grid_default","container","item","xs","components_NavBar","SkillCompareTable","skillKey","console","log","_i","_Object$keys","keys","data","skills","length","group","foundSkill","find","k","label","extended","sk","guildGroup","gSelected","branchesFromSk","branching","_this$findGroupAndLab","this","findGroupAndLabel","_this","_ref2","proficiency","_ref2$result","result","_ref2$extended","_ref2$gNumber","gNumber","proficiencyKey","concat","forEach","_objectSpread2","_this$findGroupAndLab2","findBranchesFrom","_this$props","props","g1Key","g2Key","g1Value","g2Value","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","proficiencies","Symbol","iterator","next","done","value","i","_i2","_arr","skillsToObj","err","return","_this$props2","g1Label","g2Label","mungedSkills","mungeSkills","Paper_default","square","root","Table_default","table","TableHead_default","TableRow_default","TableCell_default","cell","TableBody_default","skillGroups","map","skillGroup","key","titleCell","values","row","id","style","Tooltip_default","disableFocusListener","disableTouchListener","title","aria-label","Chip_default","chip","Component","_cell","_chip","width","textTransform","marginLeft","height","marginTop","paddingLeft","content","PerkCompareTable","_ref$gNumber","_ref$result","perks","prk","perksToObj","mungedPerks","mungePerks","noContent","component","scope","textAlign","LanguageCompareTable","languages","lng","languagesToObj","mungedLanguages","mungeLanguages","GuildPicker","state","guild","subguild","toggleSelection","event","setState","target","name","_this$state","newQuery","queryString","stringify","history","_this$props$location","location","_this$props$location$","pathname","push","search","_queryString$parse","parse","guilds","subguilds","_this$state2","tableConfig","justify","spacing","sm","FormHelperText_default","FormControl_default","formControl","Select_default","onChange","inputProps","gKey","MenuItem_default","karma","href","documentation","select","lg","components_SkillCompareTable","components_PerkCompareTable","components_LanguageCompareTable","flexGrow","marginRight","primary","main","GuildCompare","guild1","guild2","SkillPicker","selectedSkills","flattenGuild","skillPrefix","_arr2","toConsumableArray","profLevel","skill","itemIndex","indexOf","splice","clearSelection","findGuildsForSkills","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","skillsMatched","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","includes","karmaLabel","linkTo","_i3","_arr3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_this2","sectionTitle","selectedCount","size","clearSelected","onClick","skillGroupTitle","chipContainer","guildCombination","guildOption","guildOptionLink","guildOptionText","float","type","contrastText","secondary","primary1Color","primary2Color","accent1Color","accent2Color","accent3Color","tabs","textColor","tableRow","selectedColor","hoverColor","toggle","thumbOffColor","labelDisabledColor","thumbDisabledColor","createMuiTheme","themeOverrides","App","core_styles","components_Layout","react_router","path","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cee92c8e.chunk.js","sourcesContent":["import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst styles = (theme) => ({\r\n  appBar: {\r\n    ...theme.appBar\r\n  },\r\n  appTitle: {\r\n    paddingRight: 32,\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: 12,\r\n      paddingRight: 12,\r\n    }\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n    opacity: 0.69,\r\n    '&>button': {\r\n      fontWeight: 600,\r\n      margin: '0 4px',\r\n      padding: '4px',\r\n      [theme.breakpoints.down('xs')]: {\r\n        fontSize: 10,\r\n      }\r\n    },\r\n  },\r\n  activeLink: {\r\n    opacity: 1,\r\n  },\r\n});\r\n\r\nconst NavBar = ({\r\n  classes,\r\n}) => {\r\n  return(\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.appBar}>\r\n          <Typography className={classes.appTitle} variant=\"title\" color=\"inherit\">\r\n            Armageddon MUD Skills & Guilds\r\n          </Typography>\r\n          <NavLink to=\"/arma-guild-picker/\" className={classes.link} activeClassName={classes.activeLink} exact>\r\n            <Button color=\"inherit\">\r\n              Guild Picker\r\n            </Button>\r\n          </NavLink>\r\n          <NavLink to=\"/arma-guild-picker/guild-compare/\" className={classes.link} activeClassName={classes.activeLink} exact>\r\n            <Button color=\"inherit\">\r\n              Guild Compare\r\n            </Button>\r\n          </NavLink>\r\n          <NavLink to=\"/arma-guild-picker/skill-picker/\" className={classes.link} activeClassName={classes.activeLink} exact>\r\n            <Button color=\"inherit\">\r\n              Skill Picker\r\n            </Button>\r\n          </NavLink>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  )\r\n}\r\nexport default withRouter(withStyles(styles)(NavBar));\r\n","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport NavBar from './NavBar'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    backgroundColor: theme.palette.background.default,\r\n    overflow: 'hidden'\r\n  },\r\n  contentWrapper: {\r\n    [theme.breakpoints.down('xl')]: {\r\n      maxWidth: 1300,\r\n      margin: '0 auto'\r\n    }\r\n  }\r\n});\r\nconst Layout = ({\r\n  theme,\r\n  children,\r\n  classes,\r\n}) => {\r\n  return(\r\n    <Grid container className={classes.layout}>\r\n      <Grid item xs={12}>\r\n        <NavBar />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <div className={classes.contentWrapper}>\r\n          {children}\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\nexport default withStyles(styles)(Layout);\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport data from '../data/data.json'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = (theme) => ({\r\n  cell: {\r\n    width: '25%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 4,\r\n      fontSize: '0.65rem',\r\n      maxWidth: 65,\r\n      paddingRight: '4px !important'\r\n    },\r\n    padding: 8,\r\n  },\r\n  titleCell: {\r\n    textTransform: 'capitalize',\r\n    padding: 8,\r\n    backgroundColor: '#aaaaaa21',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 4,\r\n      fontSize: '0.65rem',\r\n      maxWidth: 65,\r\n      paddingRight: '4px !important'\r\n    },\r\n  },\r\n  chip: {\r\n    backgroundColor: 'rgb(48, 48, 48)',\r\n    fontSize: 8,\r\n    marginLeft: 8,\r\n    padding: 2,\r\n    height: 16,\r\n    marginTop: -1,\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginLeft: 3,\r\n      fontSize: 7,\r\n      height: 13,\r\n    },\r\n    '&> span': {\r\n      paddingLeft: 4,\r\n      paddingRight: 4,\r\n      [theme.breakpoints.down('xs')]: {\r\n        paddingLeft: 2,\r\n        paddingRight: 2\r\n      }\r\n    },\r\n    '&> span::after': {\r\n      content: '\"BRANCH\"',\r\n      [theme.breakpoints.down('xs')]: {\r\n          content: '\"B\"',\r\n      }\r\n    }\r\n  }\r\n});\r\nclass SkillCompareTable extends Component {\r\n\r\n  findGroupAndLabel(skillKey) {\r\n    console.log(skillKey)\r\n    for (let group of Object.keys(data.skills)) {\r\n      const foundSkill = Object.keys(data.skills[group]).find((k) => k === skillKey)\r\n      if (foundSkill) {\r\n        return {\r\n          group,\r\n          label: data.skills[group][foundSkill],\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  findBranchesFrom({extended, sk, guildGroup, gSelected }) {\r\n    if (!extended) return;\r\n    const branchesFromSk = data[guildGroup][gSelected].branching[sk];\r\n    const {\r\n      group,\r\n      label,\r\n    } = this.findGroupAndLabel(branchesFromSk);\r\n    return data.skills[group][branchesFromSk]\r\n  }\r\n\r\n  skillsToObj({\r\n    guildGroup,\r\n    gSelected,\r\n    proficiency,\r\n    result = {},\r\n    extended = false,\r\n    gNumber = 1,\r\n  }) {\r\n    const proficiencyKey = `${extended ? 'ex': ''}${proficiency}`;\r\n    if (data[guildGroup] && data[guildGroup][gSelected][proficiencyKey]) {\r\n      data[guildGroup][gSelected][proficiencyKey].forEach(sk => {\r\n        const {\r\n          group,\r\n          label,\r\n        } = this.findGroupAndLabel(sk);\r\n\r\n        result[group] = result[group] || {};\r\n        result[group][sk] = {\r\n          [`g${gNumber}Skill`]: label,\r\n          [`g${gNumber}SkillLevel`]: proficiency,\r\n          [`g${gNumber}SkillBranchesFrom`]: this.findBranchesFrom({ extended, sk, guildGroup, gSelected }),\r\n          group,\r\n          ...result[group][sk],\r\n        }\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n\r\n  mungeSkills() {\r\n    const {\r\n      g1Key,\r\n      g2Key,\r\n      g1Value,\r\n      g2Value,\r\n    } = this.props;\r\n\r\n    let result = {};\r\n    for (let proficiency of data.proficiencies) {\r\n      for (var i = 0; i < 2; i++) {\r\n        const guildGroup = `${i === 0 ? g1Key : g2Key}s`\r\n        const gSelected = i === 0 ? g1Value : g2Value;\r\n        const gNumber = i + 1;\r\n        for (let extended of [true, false]) {\r\n          result = this.skillsToObj({result, guildGroup, gSelected, proficiency, extended, gNumber})\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      g1Label,\r\n      g2Label,\r\n      g1Key,\r\n      g2Key,\r\n      classes,\r\n    } = this.props;\r\n    const mungedSkills = this.mungeSkills();\r\n    return (\r\n      <Paper square className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.cell}>\r\n                {g1Label} Skills\r\n              </TableCell>\r\n              <TableCell className={classes.cell}/>\r\n              <TableCell className={classes.cell}>\r\n                {g2Label} Skills\r\n              </TableCell>\r\n              <TableCell className={classes.cell}/>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.skillGroups.map(skillGroup => (\r\n              <>\r\n                <TableRow key={skillGroup}>\r\n                  <TableCell className={classes.titleCell}>\r\n                    {skillGroup}\r\n                  </TableCell>\r\n                  <TableCell className={classes.titleCell} />\r\n                  <TableCell className={classes.titleCell} />\r\n                  <TableCell className={classes.titleCell} />\r\n                </TableRow>\r\n                {mungedSkills[skillGroup] && Object.values(mungedSkills[skillGroup]).map(row => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell\r\n                      className={classes.cell}\r\n                      style={{\r\n                        backgroundColor: row['g1SkillBranchesFrom'] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                      }}\r\n                    >\r\n                    {\r\n                      row['g1SkillBranchesFrom'] && row['g1Skill']\r\n                      ? (\r\n                        <Tooltip\r\n                          disableFocusListener disableTouchListener \r\n                          title={`branches from ${row['g1SkillBranchesFrom']}`}\r\n                          aria-label={`branches from ${row['g1SkillBranchesFrom']}`}\r\n                        >\r\n                          <div>\r\n                            {row['g1Skill']}\r\n                          </div>\r\n                        </Tooltip>\r\n                      ) : row['g1Skill']\r\n                    }\r\n                    </TableCell>\r\n                    <TableCell\r\n                      className={classes.cell}\r\n                      style={{\r\n                        backgroundColor: row['g1SkillBranchesFrom'] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                      }}\r\n                    >\r\n                    {\r\n                      row['g1SkillBranchesFrom']\r\n                      ? (\r\n                        <Tooltip\r\n                          disableFocusListener disableTouchListener \r\n                          title={`branches from ${row['g1SkillBranchesFrom']}`}\r\n                          aria-label={`branches from ${row['g1SkillBranchesFrom']}`}\r\n                        >\r\n                          <div>\r\n                            {row['g1SkillLevel']}\r\n                            {row['g1SkillBranchesFrom'] && <Chip className={classes.chip} />}\r\n                          </div>\r\n                        </Tooltip>\r\n                      ) : row['g1SkillLevel']\r\n                    }\r\n                    </TableCell>\r\n                    <TableCell\r\n                      className={classes.cell}\r\n                      style={{\r\n                        backgroundColor: row['g2SkillBranchesFrom'] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                      }}\r\n                    >\r\n                    {\r\n                      row['g2SkillBranchesFrom'] && row['g2Skill']\r\n                      ? (\r\n                        <Tooltip\r\n                          disableFocusListener disableTouchListener \r\n                          title={`branches from ${row['g2SkillBranchesFrom']}`}\r\n                          aria-label={`branches from ${row['g2SkillBranchesFrom']}`}\r\n                        >\r\n                          <div>\r\n                            {row['g2Skill']}\r\n                          </div>\r\n                        </Tooltip>\r\n                      ) : row['g2Skill']\r\n                    }\r\n                    </TableCell>\r\n                    <TableCell\r\n                      className={classes.cell}\r\n                      style={{\r\n                        backgroundColor: row['g2SkillBranchesFrom'] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                      }}\r\n                    >\r\n                    {\r\n                      row['g2SkillBranchesFrom']\r\n                      ? (\r\n                        <Tooltip\r\n                          disableFocusListener disableTouchListener \r\n                          title={`branches from ${row['g2SkillBranchesFrom']}`}\r\n                          aria-label={`branches from ${row['g2SkillBranchesFrom']}`}\r\n                        >\r\n                          <div>\r\n                            {row['g2SkillLevel']}\r\n                            {row['g2SkillBranchesFrom'] && <Chip className={classes.chip} />}\r\n                          </div>\r\n                        </Tooltip>\r\n                      ) : row['g2SkillLevel']\r\n                    }\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(SkillCompareTable);\r\n\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport data from '../data/data.json'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n  cell: {\r\n    width: '50%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 4,\r\n      fontSize: '0.65rem',\r\n      maxWidth: 65,\r\n      paddingRight: '4px !important'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: 8,\r\n    },\r\n  },\r\n  noContent: {\r\n    padding: '1rem',\r\n    textAlign: 'center',\r\n    width: '100%'\r\n  }\r\n});\r\nclass PerkCompareTable extends Component {\r\n  perksToObj({\r\n    guildGroup,\r\n    gSelected,\r\n    gNumber = 1,\r\n    result = {},\r\n  }) {\r\n    if (data[guildGroup] && data[guildGroup][gSelected].perks) {\r\n      data[guildGroup][gSelected].perks.forEach(prk => {\r\n        result[prk] = {\r\n          [`g${gNumber}Perk`]: data.perks[prk],\r\n          ...result[prk],\r\n        }\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n\r\n  mungePerks() {\r\n    const {\r\n      g1Key,\r\n      g2Key,\r\n      g1Value,\r\n      g2Value,\r\n    } = this.props;\r\n\r\n    let result = {};\r\n    for (var i = 0; i < 2; i++) {\r\n      const guildGroup = `${i === 0 ? g1Key : g2Key}s`\r\n      const gSelected = i === 0 ? g1Value : g2Value;\r\n      const gNumber = i + 1;\r\n      result = this.perksToObj({result, guildGroup, gSelected, gNumber})\r\n    }\r\n    return Object.values(result);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      g1Label,\r\n      g2Label,\r\n      g1Key,\r\n      g2Key,\r\n      classes,\r\n    } = this.props;\r\n\r\n    const mungedPerks = this.mungePerks();\r\n    return (\r\n      <Paper square className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.cell}>\r\n                {g1Label} Perks\r\n              </TableCell>\r\n              <TableCell className={classes.cell}>\r\n                {g2Label} Perks\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {(!mungedPerks || mungedPerks.length === 0) && (\r\n              <TableRow key=\"noPerks\">\r\n                <Typography className={classes.noContent}>Neither group has perks</Typography>\r\n              </TableRow>\r\n            )}\r\n            {mungedPerks && mungedPerks.length > 0  && mungedPerks.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell className={classes.cell} component=\"th\" scope=\"row\">\r\n                  {row['g1Perk']}\r\n                </TableCell>\r\n                <TableCell className={classes.cell}>{row['g2Perk']}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(PerkCompareTable);\r\n\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport data from '../data/data.json'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n  cell: {\r\n    width: '50%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 4,\r\n      fontSize: '0.65rem',\r\n      maxWidth: 65,\r\n      paddingRight: '4px !important'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: 8,\r\n    },\r\n  },\r\n  noContent: {\r\n    padding: '1rem',\r\n    textAlign: 'center',\r\n    width: '100%'\r\n  }\r\n});\r\nclass LanguageCompareTable extends Component {\r\n  languagesToObj({\r\n    guildGroup,\r\n    gSelected,\r\n    gNumber = 1,\r\n    result = {},\r\n  }) {\r\n    if (data[guildGroup] && data[guildGroup][gSelected].languages) {\r\n      data[guildGroup][gSelected].languages.forEach(lng => {\r\n        result[lng] = {\r\n          [`g${gNumber}Language`]: data.skills.languages[lng],\r\n          ...result[lng],\r\n        }\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n\r\n  mungeLanguages() {\r\n    const {\r\n      g1Key,\r\n      g2Key,\r\n      g1Value,\r\n      g2Value,\r\n    } = this.props;\r\n\r\n    let result = {};\r\n      for (var i = 0; i < 2; i++) {\r\n        const guildGroup = `${i === 0 ? g1Key : g2Key}s`\r\n        const gSelected = i === 0 ? g1Value : g2Value;\r\n        const gNumber = i + 1;\r\n        result = this.languagesToObj({result, guildGroup, gSelected, gNumber})\r\n    }\r\n    return Object.values(result);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      g1Label,\r\n      g2Label,\r\n      g1Key,\r\n      g2Key,\r\n      classes,\r\n    } = this.props;\r\n\r\n    const mungedLanguages = this.mungeLanguages();\r\n    return (\r\n      <Paper square className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.cell}>\r\n                {g1Label} Languages\r\n              </TableCell>\r\n              <TableCell className={classes.cell}>\r\n                {g2Label} Languages\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {(!mungedLanguages || mungedLanguages.length === 0) && (\r\n              <TableRow key=\"noLanguages\">\r\n                <Typography className={classes.noContent}>Neither group has bonus languages</Typography>\r\n              </TableRow>\r\n            )}\r\n            {mungedLanguages && mungedLanguages.length > 0  && mungedLanguages.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell className={classes.cell} component=\"th\" scope=\"row\">\r\n                  {row['g1Language']}\r\n                </TableCell>\r\n                <TableCell className={classes.cell}>{row['g2Language']}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(LanguageCompareTable);\r\n\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport queryString from 'query-string';\r\nimport data from '../data/data.json'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SkillCompareTable from './SkillCompareTable';\r\nimport PerkCompareTable from './PerkCompareTable';\r\nimport LanguageCompareTable from './LanguageCompareTable';\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n    flexGrow: 1,\r\n  },\r\n  formControl: {\r\n    width: 'calc(100% - 1rem)',\r\n    marginRight: '1rem',\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n});\r\nclass GuildPicker extends Component {\r\n  state = {\r\n    guild: 'enforcer',\r\n    subguild: 'hunter',\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      location\r\n    } = this.props;\r\n    const {\r\n      guild,\r\n      subguild\r\n    } = queryString.parse(location.search);\r\n\r\n    if (data.guilds[guild]) {\r\n      this.setState({ guild });\r\n    }\r\n    if (data.subguilds[subguild]) {\r\n      this.setState({ subguild });\r\n    }\r\n  }\r\n\r\n  toggleSelection = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    const {\r\n      guild,\r\n      subguild\r\n    } = this.state;\r\n    const newQuery = queryString.stringify({\r\n      ...{\r\n        guild,\r\n        subguild,\r\n      },\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    const {\r\n      history,\r\n      location: {\r\n        pathname = '/'\r\n      } = {}\r\n    } = this.props;\r\n    history.push({\r\n      pathname,\r\n      search: newQuery,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes\r\n    } = this.props;\r\n    const {\r\n      guild,\r\n      subguild,\r\n    } = this.state;\r\n    const tableConfig = {\r\n      g1Label: \"Guild\",\r\n      g2Label: \"Subguild\",\r\n      g1Key: \"guild\",\r\n      g2Key: \"subguild\",\r\n      g1Value: guild,\r\n      g2Value: subguild,\r\n    };\r\n    return (\r\n      <>\r\n        <Grid container justify=\"center\" spacing={16} className={classes.container}>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormHelperText>Guild</FormHelperText>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                value={this.state.guild}\r\n                onChange={this.toggleSelection}\r\n                inputProps={{\r\n                  name: 'guild',\r\n                  id: 'guild-select',\r\n                }}\r\n              >\r\n                {Object.keys(data.guilds).map(gKey => (\r\n                  <MenuItem value={gKey}>\r\n                    {data.guilds[gKey].label}\r\n                    {data.guilds[gKey].karma ? ` (${data.guilds[gKey].karma})` : ''}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText>\r\n                <span>Documentation: </span>\r\n                <a\r\n                  className={classes.link}\r\n                  href={data.guilds[this.state.guild].documentation}\r\n                  target=\"_blank\"\r\n                >\r\n                  {data.guilds[this.state.guild].documentation}\r\n                </a>\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormHelperText>Subguild</FormHelperText>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                className={classes.select}\r\n                value={this.state.subguild}\r\n                onChange={this.toggleSelection}\r\n                inputProps={{\r\n                  name: 'subguild',\r\n                  id: 'subguild-select',\r\n                }}\r\n              >\r\n                {Object.keys(data.subguilds).map(gKey => (\r\n                  <MenuItem value={gKey}>\r\n                    {data.subguilds[gKey].label}\r\n                    {data.subguilds[gKey].karma ? ` (${data.subguilds[gKey].karma})` : ''}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText>\r\n                <span>Documentation: </span>\r\n                <a\r\n                  className={classes.link}\r\n                  href={data.subguilds[this.state.subguild].documentation}\r\n                  target=\"_blank\"\r\n                >\r\n                  {data.subguilds[this.state.subguild].documentation}\r\n                </a>\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container justify=\"center\" spacing={16} className={classes.container}>\r\n          <Grid item xs={12} lg={6}>\r\n            <SkillCompareTable\r\n              {...tableConfig}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} lg={6}>\r\n            <Grid container spacing={16} className={classes.container}>\r\n              <Grid item xs={12}>\r\n                <PerkCompareTable\r\n                  {...tableConfig}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <LanguageCompareTable\r\n                  {...tableConfig}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(GuildPicker);\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport queryString from 'query-string';\r\nimport data from '../data/data.json'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SkillCompareTable from './SkillCompareTable';\r\nimport PerkCompareTable from './PerkCompareTable';\r\nimport LanguageCompareTable from './LanguageCompareTable';\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n    flexGrow: 1,\r\n  },\r\n  formControl: {\r\n    width: 'calc(100% - 1rem)',\r\n    marginRight: '1rem',\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n});\r\nclass GuildCompare extends Component {\r\n  state = {\r\n    guild1: 'enforcer',\r\n    guild2: 'infiltrator',\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      location\r\n    } = this.props;\r\n    const {\r\n      guild1,\r\n      guild2\r\n    } = queryString.parse(location.search);\r\n\r\n    if (data.guilds[guild1]) {\r\n      this.setState({ guild1 });\r\n    }\r\n    if (data.guilds[guild2]) {\r\n      this.setState({ guild2 });\r\n    }\r\n  }\r\n\r\n  toggleSelection = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    const {\r\n      guild1,\r\n      guild2\r\n    } = this.state;\r\n    const newQuery = queryString.stringify({\r\n      ...{\r\n        guild1,\r\n        guild2,\r\n      },\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    const {\r\n      history,\r\n      location: {\r\n        pathname = '/'\r\n      } = {}\r\n    } = this.props;\r\n    history.push({\r\n      pathname,\r\n      search: newQuery,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes\r\n    } = this.props;\r\n    const {\r\n      guild1,\r\n      guild2,\r\n    } = this.state;\r\n    const tableConfig = {\r\n      g1Label: \"Guild 1\",\r\n      g2Label: \"Guild 2\",\r\n      g1Key: \"guild\",\r\n      g2Key: \"guild\",\r\n      g1Value: guild1,\r\n      g2Value: guild2,\r\n    };\r\n    return (\r\n      <>\r\n        <Grid container justify=\"center\" spacing={16} className={classes.container}>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormHelperText>Guild 1</FormHelperText>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                value={this.state.guild1}\r\n                onChange={this.toggleSelection}\r\n                inputProps={{\r\n                  name: 'guild1',\r\n                  id: 'guild1-select',\r\n                }}\r\n              >\r\n                {Object.keys(data.guilds).map(gKey => (\r\n                  <MenuItem value={gKey}>\r\n                    {data.guilds[gKey].label}\r\n                    {data.guilds[gKey].karma ? ` (${data.guilds[gKey].karma})` : ''}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText>\r\n                <span>Documentation: </span>\r\n                <a\r\n                  className={classes.link}\r\n                  href={data.guilds[this.state.guild1].documentation}\r\n                  target=\"_blank\"\r\n                >\r\n                  {data.guilds[this.state.guild1].documentation}\r\n                </a>\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormHelperText>Guild 2</FormHelperText>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                className={classes.select}\r\n                value={this.state.guild2}\r\n                onChange={this.toggleSelection}\r\n                inputProps={{\r\n                  name: 'guild2',\r\n                  id: 'guild2-select',\r\n                }}\r\n              >\r\n                {Object.keys(data.guilds).map(gKey => (\r\n                  <MenuItem value={gKey}>\r\n                    {data.guilds[gKey].label}\r\n                    {data.guilds[gKey].karma ? ` (${data.guilds[gKey].karma})` : ''}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText>\r\n                <span>Documentation: </span>\r\n                <a\r\n                  className={classes.link}\r\n                  href={data.guilds[this.state.guild2].documentation}\r\n                  target=\"_blank\"\r\n                >\r\n                  {data.guilds[this.state.guild2].documentation}\r\n                </a>\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container justify=\"center\" spacing={16} className={classes.container}>\r\n          <Grid item xs={12} lg={6}>\r\n            <SkillCompareTable\r\n              {...tableConfig}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} lg={6}>\r\n            <Grid container spacing={16} className={classes.container}>\r\n              <Grid item xs={12}>\r\n                <PerkCompareTable\r\n                  {...tableConfig}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <LanguageCompareTable\r\n                  {...tableConfig}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(GuildCompare);\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport data from '../data/data.json';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst styles = (theme) => ({\r\n  sectionTitle: {\r\n    fontSize: 20,\r\n    padding: 6,\r\n  },\r\n  skillGroupTitle: {\r\n    fontSize: 18,\r\n    padding: 20,\r\n    textTransform: 'capitalize',\r\n  },\r\n  guildOptionText: {\r\n    padding: '0 20px',\r\n  },\r\n  guildOptionLink: {\r\n    textDecoration: 'none',\r\n  },\r\n  selectedCount: {\r\n    color: '#ffffff5e'\r\n  },\r\n  chipContainer: {\r\n    padding: '0 20px'\r\n  },\r\n  chip: {\r\n    margin: '0 4px 4px 0',\r\n  },\r\n  clearSelected: {\r\n    float: 'right',\r\n  }\r\n});\r\nclass SkillPicker extends Component {\r\n  state = {\r\n    selectedSkills: [],\r\n    guilds: [],\r\n    subguilds: [],\r\n  }\r\n\r\n  componentWillMount() {\r\n    for (let guildGroup of ['guilds', 'subguilds']) {\r\n      const guilds = data[guildGroup] ? Object.keys(data[guildGroup]) : [];\r\n      const result = [];\r\n      for (let guild of guilds) {\r\n        result.push({\r\n          key: guild,\r\n          label: data[guildGroup][guild].label,\r\n          skills: this.flattenGuild(guildGroup, guild),\r\n          karma: data[guildGroup][guild].karma,\r\n        });\r\n      }\r\n      this.setState({\r\n        [guildGroup]: result\r\n      })\r\n    }\r\n  }\r\n\r\n  flattenGuild = (guildGroup, guild) => {\r\n    let result = [];\r\n    for (let skillPrefix of ['', 'ex']) {\r\n      for (let profLevel of ['languages', ...data.proficiencies]) {\r\n        if (data[guildGroup][guild][`${skillPrefix}${profLevel}`]) {\r\n          result = [...data[guildGroup][guild][`${skillPrefix}${profLevel}`], ...result]\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  toggleSelection = (event, skill) => {\r\n    const {\r\n      selectedSkills\r\n    } = this.state;\r\n\r\n    const itemIndex = selectedSkills.indexOf(skill)\r\n    if (itemIndex === -1) {\r\n      this.setState({ selectedSkills: [skill, ...selectedSkills]})\r\n    } else {\r\n      selectedSkills.splice(itemIndex, 1);\r\n      this.setState({ selectedSkills: [...selectedSkills]})\r\n    }\r\n  }\r\n\r\n  clearSelection = () => {\r\n    this.setState({ selectedSkills: [] })\r\n  }\r\n\r\n  findGuildsForSkills = () => {\r\n    const result = [];\r\n    for (let guild of this.state.guilds) {\r\n      for (let subguild of this.state.subguilds) {\r\n        let skillsMatched = 0;\r\n        for (let skill of this.state.selectedSkills) {\r\n          if (guild.skills.includes(skill) || subguild.skills.includes(skill)) {\r\n            skillsMatched++;\r\n          }\r\n        }\r\n\r\n        if (skillsMatched === this.state.selectedSkills.length) {\r\n          const karmaLabel = (guild.karma || subguild.karma) ? ` (${guild.karma + subguild.karma})` : '';\r\n          result.push({\r\n            label: `${guild.label}/${subguild.label}${karmaLabel}`,\r\n            linkTo: `/arma-guild-picker/?guild=${guild.key}&subguild=${subguild.key}`\r\n          })\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      classes,\r\n    } = this.props;\r\n    const {\r\n      selectedSkills,\r\n    } = this.state;\r\n    return (\r\n      <Grid container justify=\"center\" spacing={16} className={classes.container}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper square>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography className={classes.sectionTitle}>\r\n                  Skills\r\n                  {' '}\r\n                  <span className={classes.selectedCount}>({selectedSkills.length} selected)</span>\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                {selectedSkills.length > 0 && (<Button\r\n                  size=\"small\"\r\n                  className={classes.clearSelected}\r\n                  onClick={() => this.clearSelection()}\r\n                >\r\n                  Clear\r\n                </Button>)}\r\n              </Grid>\r\n              </Grid>\r\n            {['languages', ...data.skillGroups].map(skillGroup => (\r\n              <>\r\n                <Typography className={classes.skillGroupTitle}>{skillGroup}</Typography>\r\n                <div className={classes.chipContainer}>\r\n                  {Object.keys(data.skills[skillGroup]).map((key) => (\r\n                    <Chip\r\n                      className={classes.chip}\r\n                      onClick={(event) => this.toggleSelection(event, key)}\r\n                      label={data.skills[skillGroup][key]}\r\n                      color={selectedSkills.includes(key) ? 'primary' : ''}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </>\r\n            ))}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper square>\r\n            <Typography className={classes.sectionTitle}>\r\n              Matching Guild\r\n              {' '}\r\n              <span className={classes.selectedCount}>(Click to View in Guild Picker)</span>\r\n            </Typography>\r\n            <Grid container justify=\"center\" spacing={16} className={classes.container}>\r\n              {this.findGuildsForSkills().map(guildCombination => (\r\n                <Grid item xs={12} sm={6} className={classes.guildOption}>\r\n                  <Link to={guildCombination.linkTo} className={classes.guildOptionLink}>\r\n                    <Typography className={classes.guildOptionText}>\r\n                      {guildCombination.label}\r\n                    </Typography>\r\n                  </Link>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SkillPicker);\r\n","const theme = {\r\n  \"palette\": {\r\n    \"type\": \"dark\",\r\n    \"primary\": {\r\n      \"main\": \"#d84315\",\r\n      \"contrastText\": \"rgba(0, 0, 0, 0.87)\"\r\n    },\r\n    \"secondary\": {\r\n      \"main\": \"#5d4037\"\r\n    },\r\n    \"primary1Color\": \"#d84315\",\r\n    \"primary2Color\": \"#5d4037\",\r\n    \"accent1Color\": \"#eeeeee\",\r\n    \"accent2Color\": \"rgba(255, 236, 179, 0.3)\",\r\n    \"accent3Color\": \"#ff8f00\"\r\n  },\r\n  \"tabs\": {\r\n    \"backgroundColor\": \"#e64a19\",\r\n    \"textColor\": \"rgba(33, 33, 33, 0.54)\"\r\n  },\r\n  \"tableRow\": {\r\n    \"selectedColor\": \"rgba(255, 255, 255, 0.1)\",\r\n    \"hoverColor\": \"rgba(255, 236, 179, 0.15)\"\r\n  },\r\n  \"toggle\": {\r\n    \"thumbOffColor\": \"rgba(255, 236, 179, 0.51)\",\r\n    \"labelDisabledColor\": \"rgba(255, 255, 255, 0.29)\",\r\n    \"thumbDisabledColor\": \"rgba(255, 255, 255, 0.48)\"\r\n  }\r\n};\r\nexport default theme;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Layout from './components/Layout'\r\nimport GuildPicker from './components/GuildPicker'\r\nimport GuildCompare from './components/GuildCompare'\r\nimport SkillPicker from './components/SkillPicker'\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport themeOverrides from './theme.js';\r\nconst theme = createMuiTheme(themeOverrides);\r\n\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Router>\r\n        <Layout>\r\n          <Route path=\"/arma-guild-picker/\" exact component={GuildPicker} />\r\n          <Route path=\"/arma-guild-picker/guild-picker/\" component={GuildPicker} />\r\n          <Route path=\"/arma-guild-picker/guild-compare/\" component={GuildCompare} />\r\n          <Route path=\"/arma-guild-picker/skill-picker/\" component={SkillPicker} />\r\n        </Layout>\r\n      </Router>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}